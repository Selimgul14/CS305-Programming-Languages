%{
  int line = 1;
  int inStr = 0; 
%}

DIGIT [0-9]
SIGN [-+]
EXP [eE]{SIGN}?{DIGIT}+

%%
\n line++;
"\'"  inStr++;
"\""
""
\
" "
"\t" 
"."

"\"If\"" printf("%d tIF\n", line);
"\"Function\""	printf("%d tFUNCTION\n", line);
"\"Set\""	printf("%d tSET\n", line);
"\"Print\""	printf("%d tPRINT\n", line);
"\"Get\""	printf("%d tGET\n", line);
"\"Return\""	printf("%d tRETURN\n", line);
"\"For\""	printf("%d tFOR\n", line);

","	printf("%d tCOMMA\n", line);
"\"+\""	printf("%d tPLUS\n", line);
"\"*\"" printf("%d tMUL\n", line);
"\"++\"" printf("%d tINC\n", line);
"[" printf("%d tLBRAC\n", line);
"\">\"" printf("%d tGT\n", line);
"\">=\"" printf("%d tGEQ\n", line);
"\"==\"" printf("%d tEQUALITY\n", line);
"\"-\""	printf("%d tMINUS\n", line);
"\"/\""	printf("%d tDIV\n", line);
"\"--\"" printf("%d tDEC\n", line); 
"]" printf("%d tRBRAC\n", line);
"\"<\"" printf("%d tLT\n", line);
"\"<=\"" printf("%d tLEQ\n", line);
 

{DIGIT}+ {
  yytext[yyleng] = '\0';
  int value = atoi(yytext);
  printf("%d tNUM (%s) (%d)\n", line, yytext, value);
}

{DIGIT}+\.{DIGIT}*({EXP})? {
  double value = strtod(yytext, NULL);
  printf("%d tNUM (%s) (%d)\n", line, yytext, value);
}


\'[^']*\'   {
	inStr = 0;
	int i = 0;
	int lCount = 0;
	  for (i = 0; i < (strlen(yytext)-1); i++) {
                if ((yytext[i] == 10)) lCount++;
        }  
       	yytext[strlen(yytext)-1] = '\0';  
	printf("%d tSTRING (%s)\n", line, yytext+1);
	        line += lCount;
	    }
      
\"[a-zA-Z_][a-zA-Z0-9_]*\" yytext[strlen(yytext)-1] = '\0';  printf("%d tIDENT (%s)\n", line, yytext+1);

%%

int main() {
	yylex();
	return(0);
}